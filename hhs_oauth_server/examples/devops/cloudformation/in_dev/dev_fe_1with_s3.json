{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "25af43bb-a438-4ab1-95f3-a75ccb55a8e0": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 400,
          "y": 150
        },
        "z": 0,
        "embeds": [],
        "ismemberof": [
          "c3783791-0069-4324-8453-123708403b5f"
        ]
      },
      "ccaf1f4f-226d-426c-98dd-2d40c521faac": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 407.1666666666667,
          "y": 54.666666666666664
        },
        "z": 0,
        "embeds": [],
        "ismemberof": [
          "c3783791-0069-4324-8453-123708403b5f"
        ]
      },
      "c3783791-0069-4324-8453-123708403b5f": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 310,
          "y": 30
        },
        "z": 0,
        "embeds": []
      },
      "edac4598-f770-4f35-afca-37b85d0499f3": {
        "source": {
          "id": "ccaf1f4f-226d-426c-98dd-2d40c521faac"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 1
      },
      "8af86a4e-f1e7-4e5d-92cb-0acef1900f7f": {
        "source": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 11
      },
      "45524452-309f-4038-bca6-5a7a5f01df22": {
        "source": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 1
      },
      "e82b4266-5a0d-480d-a8fb-1dc01afd5599": {
        "source": {
          "id": "ccaf1f4f-226d-426c-98dd-2d40c521faac"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 2
      },
      "8c7ca01e-c682-4ff0-bdde-06b7e176e7c5": {
        "source": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "target": {
          "id": "65ce014a-b543-4f02-b13d-7065981f348d"
        },
        "z": 3
      }
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t2.medium": {
        "Arch": "HVM"
      },
      "m1.medium": {
        "Arch": "PV"
      },
      "m1.large": {
        "Arch": "PV"
      },
      "m1.xlarge": {
        "Arch": "PV"
      },
      "m2.xlarge": {
        "Arch": "PV"
      },
      "m2.2xlarge": {
        "Arch": "PV"
      },
      "m2.4xlarge": {
        "Arch": "PV"
      },
      "m3.medium": {
        "Arch": "HVM"
      },
      "m3.large": {
        "Arch": "HVM"
      },
      "m3.xlarge": {
        "Arch": "HVM"
      },
      "m3.2xlarge": {
        "Arch": "HVM"
      },
      "c1.medium": {
        "Arch": "PV"
      },
      "c1.xlarge": {
        "Arch": "PV"
      },
      "c3.large": {
        "Arch": "HVM"
      },
      "c3.xlarge": {
        "Arch": "HVM"
      },
      "c3.2xlarge": {
        "Arch": "HVM"
      },
      "c3.4xlarge": {
        "Arch": "HVM"
      },
      "c3.8xlarge": {
        "Arch": "HVM"
      },
      "r3.large": {
        "Arch": "HVM"
      },
      "r3.xlarge": {
        "Arch": "HVM"
      },
      "r3.2xlarge": {
        "Arch": "HVM"
      },
      "r3.4xlarge": {
        "Arch": "HVM"
      },
      "r3.8xlarge": {
        "Arch": "HVM"
      },
      "i2.xlarge": {
        "Arch": "HVM"
      },
      "i2.2xlarge": {
        "Arch": "HVM"
      },
      "i2.4xlarge": {
        "Arch": "HVM"
      },
      "i2.8xlarge": {
        "Arch": "HVM"
      },
      "hi1.4xlarge": {
        "Arch": "HVM"
      },
      "hs1.8xlarge": {
        "Arch": "HVM"
      },
      "cr1.8xlarge": {
        "Arch": "HVM"
      },
      "cc2.8xlarge": {
        "Arch": "HVM"
      }
    },
    "AWSRegionArch2AMI": {
      "us-east-1": {
        "PV": "ami-ac09f8c1",
        "HVM": "ami-ac09f8c1"
      },
      "us-east-1a": {
        "PV": "ami-ac09f8c1",
        "HVM": "ami-ac09f8c1"
      },
      "us-east-1b": {
        "PV": "ami-ac09f8c1",
        "HVM": "ami-ac09f8c1"
      },
      "us-east-1c": {
        "PV": "ami-ac09f8c1",
        "HVM": "ami-ac09f8c1"
      }
    }
  },
  "Parameters": {
     "InstanceName" : {
        "Description" : "Easily recognizable name in the EC2 Instance List",
        "Type" : "String",
        "Default" : "Change_this_name_to_Something_unique"
     },
     "TagKeyStack": {
         "Description": "Application Stack IDentifier",
         "Type": "String",
         "Default": "dev",
         "AllowedValues": ["sbx", "prod", "dev", "test", "impl", "tools"]
     },
     "TagKeyLayer": {
          "Description": "Application Layer Identifier",
          "Type": "String",
          "Default": "app",
          "AllowedValues": ["web" , "data", "app", "nat", "jump", "tools"]
     },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "String",
      "Default": "cms_bluebutton_fe_dev",
      "AllowedValues": [
        "cms_bluebutton_fe_dev"
      ]
    },
    "InstanceType": {
      "Description": "RHEL Linux EC2 instance type",
      "Type": "String",
      "Default": "t2.medium",
      "AllowedValues": [
        "t2.medium",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type"
    },
    "pyappsPassword" : {
      "Description": "Password for pyapps user account",
      "Type": "String",
      "Default": "RESET_THIS"
    }
  },
  "Resources": {
    "EC2S3Role" : {
          "Type" : "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
			"Policies": [ {
             "PolicyName": "S3Policy",
             "PolicyDocument" : {
						"Statement": [
						{
							"Effect": "Allow",
							"Action": "s3:*",
							"Resource": "*"
						}
					]
				}
			} ]
		  }
		},
    "EC2S3RoleProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
           "Path": "/",
           "Roles": [
             {
               "Ref": "EC2S3Role"
             }
           ]
         }
    },
  "Ec2SecurityGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH and access to Apache and Tomcat",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        }
      }
    },
    "EcInstance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
       "AWS::CloudFormation::Designer": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        },
        "AWS::CloudFormation::Init": {
          "configSets": {
            "Install": [
              "Install"
            ]
          },
          "Install": {
            "packages": {
              "yum": {
                "gcc": [],
                "gcc-c++": [],
                "httpd": [],
                "httpd-devel": [],
                "zlib-devel": [],
                "bzip2-devel": [],
                "mod_wsgi": [],
                "openssl-devel": [],
                "ncurses-devel": [],
                "sqlite-devel": [],
                "readline-devel": [],
                "tk-devel": [],
                "gdbm-devel": [],
                "db4-devel": [],
                "libpcap-devel": [],
                "xz-devel": [],
                "git": [],
                "libxml2-devel": [],
                "libxslt-devel": []
              }
            },
            "groups": {
              "apache": {"gid": "48"}
            },
            "users" : {
              "pyapps": {
                "groups" : ["apache"],
                "uid" : "501",
                "homeDir" : "/home/pyapps"
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": ["AWSRegionArch2AMI", {"Ref": "AWS::Region"},
            {"Fn::FindInMap": [ "AWSInstanceType2Arch",
                {"Ref": "InstanceType"}, "Arch"]}]
        },
        "IamInstanceProfile" : { "Ref" : "EC2S3RoleProfile" },
        "InstanceType": {"Ref": "InstanceType"},
        "KeyName": {"Ref": "KeyName"},
        "SecurityGroupIds": [{ "Ref": "Ec2SecurityGrp"}],
        "Tags": [
          {"Key": "Name", "Value": {"Ref": "InstanceName"}},
          {"Key": "business", "Value": "oeda"},
          {"Key": "application", "Value": "bluebutton"},
          {"Key": "stack", "Value": {"Ref": "TagKeyStack" }},
          {"Key": "layer", "Value": {"Ref": "TagKeyLayer"}}
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [ "", [
                "#!/bin/bash -ex", "\n",
                "echo 'Build starting...' >/home/ec2-user/build_status.log\n",
                "date -r /home/ec2-user/build_status.log >>/home/ec2-user/build_status.log\n",
                "mkdir /home/ec2-user/script \n",

                "/usr/local/bin/aws s3 cp ",
                "s3://bluebutton-dev/hello.sh ",
                " /home/ec2-user/script/ \n",

                "# Create pyapps user  \n",
                "echo 'Create user:pyapps...' >>/home/ec2-user/build_status.log \n",
                "pass=$(perl -e 'print crypt($ARGV[0], 'password')' $",
                {"Ref": "pyappsPassword" },
                ") \n",
                "useradd -m -p $pass pyapps \n",

                "ls -la >>/home/ec2-user/build_status.log \n",
                "chmod +x /home/ec2-user/script/* \n",
                "chown -R ec2-user:root /home/ec2-user/script \n",
                "/home/ec2-user/script/hello.sh \n",

                "echo 'Installing Apache2' >>/home/ec2-user/build_status.log\n",
                "yum -y install httpd","\n",

                "echo 'Apache2. Done' >>/home/ec2-user/build_status.log\n",
                "date -r /home/ec2-user/build_status.log >>/home/ec2-user/build_status.log\n",
                "cat /etc/redhat-release >/home/ec2-user/build.log \n",

                "echo 'package update in progress' >>/home/ec2-user/build_status.log \n",
                "yum-config-manager --enable rhel-server-rhscl-6-rpms \n",
                "yum -y update >>/home/ec2-user/build.log \n",

                "echo 'Installing support dependencies' >>/home/ec2-user/build_status.log \n",
                "yum -y groupinstall 'Development Tools' \n",
                "yum -y install gcc gcc-c++ httpd-devel zlib-devel bzip2-devel ",
                " openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel",
                " db4-devel libpcap-devel xz-devel \n",

                "echo '/usr/local/lib' >>/etc/ld.so.conf \n",
                "mkdir /home/ec2-user/download \n",
                "cd /home/ec2-user/download \n",

                "echo 'Installing python 3.5.2' >>/home/ec2-user/build_status.log \n",
                "wget https://www.python.org/ftp/python/3.5.2/Python-3.5.2.tar.xz \n",
                "tar xf  Python-3.5.2.tar.xz \n",
                "cd /home/ec2-user/download/Python-3.5.2 \n",
                "./configure --prefix=/usr/local --enable-shared ",
                " LDFLAGS='-Wl,-rpath /usr/local/lib' --enable-loadable-sqlite-extensions \n",
                "make \n",
                "make altinstall \n",
                "cd /home/ec2-user/download \n",

                "echo 'Installing git' >>/home/ec2-user/build_status.log \n",
                "yum -y install git \n",

                "echo 'Installing mod_Wsgi_4.5.3' >>/home/ec2-user/build_status.log \n",
                "wget https://codeload.github.com/GrahamDumpleton/mod_wsgi/tar.gz/4.5.3 \n",
                "mv 4.5.3 ./mod_wsgi_4.5.3.tar.gz \n",
                "tar -xzvf mod_wsgi_4.5.3.tar.gz \n",
                "cd mod_wsgi-4.5.3 \n",
                "./configure --with-python=/usr/local/bin/python3.5 --with-apxs=/usr/sbin/apxs \n",

                "echo 'Setup for front-end app' >>/home/ec2-user/build_status.log \n",
                "mkdir /var/virtualenv \n",
                "mkdir /var/pyapps \n",

                "echo 'Checking SELINUX status' >>/home/ec2-user/build_status.log \n",
                "cat /etc/selinux/config >>/home/ec2-user/build_status.log \n",
                "# echo 'Configure SELinux' >>/home/ec2-user/build_status.log \n",
                "# semanage fcontext -a -t httpd_sys_content_t \"/var/pyapps(/.*)?\" \n",
                "# semanage fcontext -a -t httpd_sys_content_t \"/var/virtualenv(/.*)?\" \n",
                "# restorecon -Rv /var \n",

                "chkconfig httpd on \n",
                "service httpd start \n",

                "echo 'Install Virtual Env:/var/virtualenv/hhs_o_server' >>/home/ec2-user/build_status.log \n",
                "chmod -R 755 /var/virtualenv \n",
                "chmod -R 755 /var/pyapps \n",
                "cd /var/virtualenv \n",
                "/usr/local/bin/pyvenv-3.5 hhs_o_server \n",
                "chmod -R 755 /var/virtualenv/hhs_o_server \n",
                "mkdir /var/pyapps/hhs_o_server \n",
                "cd /var/pyapps/hhs_o_server \n",
                "chmod -R 755 /var/pyapps/hhs_o_server \n",
                "git clone https://github.com/transparenthealth/hhs_oauth_server \n",
                "cd /var/pyapps/hhs_o_server/hhs_oauth_server \n",

                "# Change ownership of pyapp files \n",
                "echo 'Changing ownership:/var/virtualenv/hhs_o_server' >>/home/ec2-user/build_status.log \n",
                "chown -Rf pyapps:apache /var/pyapps \n",
                "chown -Rf pyapps:apache /var/virtualenv \n",

                "# activate Virtualenv \n",
                "echo 'Activate Virtualenv  >>/home/ec2-user/build_status.log \n",
                "source /var/virtualenv/hhs_o_server/bin/activate \n",

                "echo 'upgrade pip3.5 to avoid error' >>/home/ec2-user/build_status.log \n",
                "/usr/local/bin/pip3.5 install --upgrade pip \n",

                "# Install Python modules \n",
                "echo 'Install Python modules from requirements  >>/home/ec2-user/build_status.log \n",
                "/usr/local/bin/pip3.5 install -r requirements/requirements.txt \n",

                "echo 'Configure application >>/home/ec2-user/build_status.log \n",
                "export DJANGO_SETTINGS_MODULE=hhs_oauth_server.settings.base \n",
                "python manage.py makemigrations \n",
                "python manage.py migrate \n",

                "echo 'Integrate App with Apache2' >>/home/ec2-user/build_status.log \n",
                "cd / \n",
                "/usr/local/bin/aws s3 cp ",
                "s3://bluebutton-dev/config/config_files.zip ",
                " /home/ec2-user/script/ \n",

                "unzip /home/ec2-user/script/config_files.zip \n",

                "echo 'Tidying up...' >>/home/ec2-user/build_status.log \n",

                "chown ec2-user:ec2-user /home/ec2-user/build* \n",
                "chown ec2-user:ec2-user /home/ec2-user/*.log \n",

                "date -r /home/ec2-user/build_status.log >>/home/ec2-user/build_status.log\n",
                "echo 'Done.' >>/home/ec2-user/build_status.log \n"

              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "Ec2SecurityGrp": {
      "Value": {
        "Ref": "Ec2SecurityGrp"
      },
      "Description": "New Security Group for Instance"
    },
    "EcInstance": {
      "Value":{
        "Ref": "EcInstance"
      }
    }
  }
}


