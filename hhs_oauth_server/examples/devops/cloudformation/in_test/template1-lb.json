{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Full Deployment Script to choose environment, build LoadBalancer Server",
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "25af43bb-a438-4ab1-95f3-a75ccb55a8e0": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 390,
          "y": 150
        },
        "z": 1,
        "embeds": [],
        "ismemberof": [
          "c3783791-0069-4324-8453-123708403b5f"
        ],
        "isrelatedto": [
          "b70edfb4-c8ff-42e6-98be-bf06da53d012"
        ]
      },
      "ccaf1f4f-226d-426c-98dd-2d40c521faac": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 407.1666666666667,
          "y": 54.666666666666664
        },
        "z": 0,
        "embeds": [],
        "ismemberof": [
          "c3783791-0069-4324-8453-123708403b5f"
        ]
      },
      "c3783791-0069-4324-8453-123708403b5f": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 300,
          "y": 30
        },
        "z": 1,
        "embeds": [],
        "dependson": [
          "e27d6d77-0199-4486-b2f9-b6a8c3ca874e"
        ]
      },
      "edac4598-f770-4f35-afca-37b85d0499f3": {
        "source": {
          "id": "ccaf1f4f-226d-426c-98dd-2d40c521faac"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 1
      },
      "8af86a4e-f1e7-4e5d-92cb-0acef1900f7f": {
        "source": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 11
      },
      "45524452-309f-4038-bca6-5a7a5f01df22": {
        "source": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 1
      },
      "e82b4266-5a0d-480d-a8fb-1dc01afd5599": {
        "source": {
          "id": "ccaf1f4f-226d-426c-98dd-2d40c521faac"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 2
      },
      "8c7ca01e-c682-4ff0-bdde-06b7e176e7c5": {
        "source": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "target": {
          "id": "65ce014a-b543-4f02-b13d-7065981f348d"
        },
        "z": 3
      },
      "b096733c-e827-4720-aad3-b2b95a2cfc6a": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 60,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "97e2ecba-b8a1-4a77-bdbb-ac6d9e8ad5e1": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 180,
          "y": 90
        },
        "z": 1,
        "embeds": []
      },
      "b70edfb4-c8ff-42e6-98be-bf06da53d012": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 480,
          "y": 90
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "97e2ecba-b8a1-4a77-bdbb-ac6d9e8ad5e1"
        ]
      },
      "e27d6d77-0199-4486-b2f9-b6a8c3ca874e": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 600,
          "y": 90
        },
        "z": 1,
        "embeds": [],
        "isconnectedto": [
          "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        ]
      },
      "08eedf87-20ef-40a5-b5ca-ae580fd7f26d": {
        "source": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0",
          "selector": "g:nth-child(1) g:nth-child(4) g:nth-child(3) circle:nth-child(1)     ",
          "port": "AWS::MembershipLInk-AWS::EC2::SecurityGroup-SecurityGroupIds"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 12
      },
      "030f5830-3127-45e2-87f3-10a92a3a3410": {
        "source": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0",
          "selector": "g:nth-child(1) g:nth-child(4) g:nth-child(3) circle:nth-child(1)     ",
          "port": "AWS::MembershipLInk-AWS::EC2::SecurityGroup-SecurityGroupIds"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 12
      },
      "5c13d237-9023-44ae-8699-0b014252f6fd": {
        "source": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "target": {
          "id": "e27d6d77-0199-4486-b2f9-b6a8c3ca874e"
        },
        "z": 11
      }
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t2.medium": {
        "Arch": "HVM"
      },
      "m1.medium": {
        "Arch": "PV"
      },
      "m1.large": {
        "Arch": "PV"
      },
      "m1.xlarge": {
        "Arch": "PV"
      },
      "m2.xlarge": {
        "Arch": "PV"
      },
      "m2.2xlarge": {
        "Arch": "PV"
      },
      "m2.4xlarge": {
        "Arch": "PV"
      },
      "m3.medium": {
        "Arch": "HVM"
      },
      "m3.large": {
        "Arch": "HVM"
      },
      "m3.xlarge": {
        "Arch": "HVM"
      },
      "m3.2xlarge": {
        "Arch": "HVM"
      },
      "c1.medium": {
        "Arch": "PV"
      },
      "c1.xlarge": {
        "Arch": "PV"
      },
      "c3.large": {
        "Arch": "HVM"
      },
      "c3.xlarge": {
        "Arch": "HVM"
      },
      "c3.2xlarge": {
        "Arch": "HVM"
      },
      "c3.4xlarge": {
        "Arch": "HVM"
      },
      "c3.8xlarge": {
        "Arch": "HVM"
      },
      "r3.large": {
        "Arch": "HVM"
      },
      "r3.xlarge": {
        "Arch": "HVM"
      },
      "r3.2xlarge": {
        "Arch": "HVM"
      },
      "r3.4xlarge": {
        "Arch": "HVM"
      },
      "r3.8xlarge": {
        "Arch": "HVM"
      },
      "i2.xlarge": {
        "Arch": "HVM"
      },
      "i2.2xlarge": {
        "Arch": "HVM"
      },
      "i2.4xlarge": {
        "Arch": "HVM"
      },
      "i2.8xlarge": {
        "Arch": "HVM"
      },
      "hi1.4xlarge": {
        "Arch": "HVM"
      },
      "hs1.8xlarge": {
        "Arch": "HVM"
      },
      "cr1.8xlarge": {
        "Arch": "HVM"
      },
      "cc2.8xlarge": {
        "Arch": "HVM"
      }
    },
    "AWSRegionArch2AMI": {
      "us-east-1": {
        "PV": "ami-d8c7aecf",
        "HVM": "ami-28c2ab3f"
      },
      "us-east-1a": {
        "PV": "ami-d8c7aecf",
        "HVM": "ami-28c2ab3f"
      },
      "us-east-1b": {
        "PV": "ami-d8c7aecf",
        "HVM": "ami-28c2ab3f"
      },
      "us-east-1c": {
        "PV": "ami-d8c7aecf",
        "HVM": "ami-28c2ab3f"
      }
    },
    "VPCEnvironment": {
      "us-east-1": {
        "dev": "vpc-80bdc3e7",
        "test": "vpc-5d5a163a",
        "impl": "vpc-5fd4de38",
        "prod": "vpc-5fd4de38"
      }
    },
    "EnvLayer": {
      "dev": {
        "dmz": "10.224.78.144/28",
        "web": "10.224.78.0/28",
        "app": "10.224.78.48/28",
        "data": "10.224.78.96/28"
      },
      "test": {
        "dmz": "10.224.90.144/28",
        "web": "10.224.90.0/28",
        "app": "10.224.90.48/28",
        "data": "10.224.90.96/28"
      },
      "impl": {
        "dmz": "10.246.44.144/28",
        "web": "10.246.44.0/28",
        "app": "10.246.44.48/28",
        "data": "10.246.44.96/28"
      },
      "prod": {
        "dmz": "10.244.140.144/28",
        "web": "10.244.140.0/28",
        "app": "10.244.140.48/28",
        "data": "10.244.140.96/28"
      }
    },
    "EnvSubNetId": {
      "dev": {
        "dmz": "10.224.78.144/28",
        "web": "10.224.78.0/28",
        "app": "10.224.78.48/28",
        "data": "10.224.78.96/28"
      },
      "test": {
        "dmz": "subnet-a3d9c289",
        "web": "subnet-acd9c286",
        "app": "subnet-a0d9c28a",
        "data": "subnet-a1d9c28b"
      },
      "impl": {
        "dmz": "10.246.44.144/28",
        "web": "10.246.44.0/28",
        "app": "10.246.44.48/28",
        "data": "10.246.44.96/28"
      },
      "prod": {
        "dmz": "10.244.140.144/28",
        "web": "10.244.140.0/28",
        "app": "10.244.140.48/28",
        "data": "10.244.140.96/28"
      }
    }
  },
  "Parameters": {
    "BuildImageId": {
      "Type": "String",
      "Description": "PV Image",
      "Default": "ami-d8c7aecf"
    },
    "InstanceName": {
      "Description": "Easily recognizable name in the EC2 Instance List",
      "Type": "String",
      "Default": "Change_this_name_to_Something_unique"
    },
    "TagKeyStack": {
      "Description": "Application Stack Identifier",
      "Type": "String",
      "Default": "dev",
      "AllowedValues": [
        "dev",
        "test",
        "impl",
        "prod",
        "sbx",
        "tools"
      ]
    },
    "TagKeyLayer": {
      "Description": "Application Layer Identifier",
      "Type": "String",
      "Default": "app",
      "AllowedValues": [
        "dmz",
        "web",
        "app",
        "data",
        "nat",
        "jump",
        "tools"
      ]
    },
    "KeyName": {
      "Description": "EC2 KeyPair for SSH access to instance",
      "Type": "String",
      "Default": "cms_bluebutton_fe_dev",
      "AllowedValues": [
        "cms_bluebutton_fe_dev"
      ]
    },
    "InstanceType": {
      "Description": "RHEL Linux EC2 instance type",
      "Type": "String",
      "Default": "m2.xlarge",
      "AllowedValues": [
        "t2.medium",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type"
    },
    "LBServerName": {
      "Description": "Linux Server (DNS) Name (Make Unique) prefix environment unless production",
      "Type": "String",
      "Default": "api.bbonfhir.com"
    },
    "PyAppHome": {
      "Description": "Python App Home Base Path",
      "Type": "String",
      "Default": "/var/pyapps/hhs_o_server"
    },
    "LBMaster": {
      "Description": "LB superuser",
      "Type": "String",
      "Default": "lbapps"
    },
    "pyappsemail": {
      "Description": "LB apps superuser email",
      "Type": "String",
      "Default": "admin@api.bbonfhir.com"
    },
    "LBPassword": {
      "Description": "LB superuser password",
      "Type": "String",
      "Default": "R3s3t_Th1s"
    },
    "AppServerIP1": {
      "Description": "Load Balancer pass through to App Server 1 by IP Address",
      "Type": "String",
      "Default": "10.224.78.52"
    },
    "AppServerIP2": {
      "Description": "Load Balancer pass through to App Server 2 by IP Address",
      "Type": "String",
      "Default": "10.224.78.59"
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "VpcId of your existing Virtual Private Cloud (VPC)"
    }
  },
  "Resources": {
    "EC2S3Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "S3Policy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "97e2ecba-b8a1-4a77-bdbb-ac6d9e8ad5e1"
        }
      }
    },
    "EC2S3RoleProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "EC2S3Role"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "b70edfb4-c8ff-42e6-98be-bf06da53d012"
        }
      }
    },
    "Ec2SecurityGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH and access to Apache",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        }
      },
      "DependsOn": [
        "MyEIP"
      ]
    },
    "myENI": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Tags": [
          {
            "Key": "Layer",
            "Value": "DMZ"
          }
        ],
        "Description": "A nice description.",
        "SourceDestCheck": "false",
        "SubnetId": {
          "Fn::FindInMap": [
            "EnvSubNetId",
            {
              "Ref": "TagKeyStack"
            },
            {
              "Ref": "TagKeyLayer"
            }
          ]
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "b096733c-e827-4720-aad3-b2b95a2cfc6a"
        }
      }
    },
    "EcInstance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        },
        "AWS::CloudFormation::Init": {
          "configSets": {
            "Install": [
              "Install"
            ]
          },
          "Install": {
            "packages": {
              "yum": {
                "gcc": [],
                "gcc-c++": [],
                "httpd": [],
                "httpd-devel": [],
                "zlib-devel": [],
                "bzip2-devel": [],
                "mod_wsgi": [],
                "openssl-devel": [],
                "ncurses-devel": [],
                "sqlite-devel": [],
                "readline-devel": [],
                "tk-devel": [],
                "gdbm-devel": [],
                "db4-devel": [],
                "libpcap-devel": [],
                "xz-devel": [],
                "git": [],
                "libxml2-devel": [],
                "libxslt-devel": []
              }
            },
            "groups": {
              "apache": {
                "gid": "48"
              }
            },
            "users": {
              "pyapps": {
                "groups": [
                  "apache"
                ],
                "uid": "501",
                "homeDir": "/home/pyapps"
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
          "Ref": "BuildImageId"
        },
        "IamInstanceProfile": {
          "Ref": "EC2S3RoleProfile"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SubnetId": {
          "Fn::FindInMap": [
            "EnvSubNetId",
            {
              "Ref": "TagKeyStack"
            },
            {
              "Ref": "TagKeyLayer"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "InstanceName"
            }
          },
          {
            "Key": "business",
            "Value": "oeda"
          },
          {
            "Key": "application",
            "Value": "bluebutton"
          },
          {
            "Key": "stack",
            "Value": {
              "Ref": "TagKeyStack"
            }
          },
          {
            "Key": "layer",
            "Value": {
              "Ref": "TagKeyLayer"
            }
          }
        ],
        "Tenancy": "dedicated",
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex",
                "\n",
                "export BUILD_LOG=/home/ec2-user/build_status.log \n",
                "hostname ",
                {
                  "Ref": "LBServerName"
                },
                " >$BUILD_LOG \n",
                "echo 'Hostname configured: ",
                {
                  "Ref": "LBServerName"
                },
                "' >>$BUILD_LOG \n",
                "mkdir -p /home/ec2-user/script \n",
                "chown -R ec2-user:root /home/ec2-user/script \n",
                "# Configure AWS CLI Credentials \n",
                "export AWS_DEFAULT_REGION=us-east-1 \n",
                "echo 'Create user:",
                {
                  "Ref": "LBMaster"
                },
                ".' >>$BUILD_LOG \n",
                "pass=$(perl -e 'print crypt($ARGV[0], 'password')' $",
                {
                  "Ref": "LBPassword"
                },
                ") \n",
                "echo ",
                {
                  "Ref": "LBMaster"
                },
                ":$pass \n",
                "useradd -m -p $pass ",
                {
                  "Ref": "LBMaster"
                },
                " \n",
                "echo 'Add ",
                {
                  "Ref": "LBMaster"
                },
                " to sudoers:' >>$BUILD_LOG \n",
                "echo '",
                {
                  "Ref": "LBMaster"
                },
                "       ALL=(ALL)       NOPASSWD: ALL' >/etc/sudoers.d/",
                {
                  "Ref": "LBMaster"
                },
                ".conf \n",
                "echo 'Installing Apache2' >>$BUILD_LOG \n",
                "yum -y install httpd",
                "\n",
                "echo 'RHEL Version:' >>$BUILD_LOG \n",
                "cat /etc/redhat-release >>$BUILD_LOG \n",
                "echo 'package updates... ' >>$BUILD_LOG \n",
                "yum-config-manager --enable rhel-server-rhscl-6-rpms \n",
                "yum -y update >>$BUILD_LOG \n",
                "echo 'Installing support dependencies' >>$BUILD_LOG \n",
                "yum -y groupinstall 'Development Tools' \n",
                "yum -y install gcc gcc-c++ httpd-devel zlib-devel bzip2-devel ",
                " openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel",
                " db4-devel libpcap-devel xz-devel python-devel postgresql-devel",
                " libffi.x86_64 python-cffi \n",
                "mkdir -p /home/ec2-user/download \n",
                "cd /home/ec2-user/download \n",
                "echo 'downloading and installing libffi-devel' >>$BUILD_LOG \n",
                "wget http://mirror.centos.org/centos/6/os/x86_64/Packages/libffi-devel-3.0.5-3.2.el6.x86_64.rpm \n",
                "yum -y install ./libffi-devel-3.0.5-3.2.el6.x86_64.rpm \n",
                "echo 'Installing lxml+lxslt' >>$BUILD_LOG \n",
                "yum -y install libxml2-devel libxslt-devel \n",
                "echo '/usr/local/lib' >>/etc/ld.so.conf \n",
                "cd /home/ec2-user/download \n",
                "echo 'Installing git' >>$BUILD_LOG \n",
                "yum -y install git \n",
                "echo 'Setup for front-end app' >>$BUILD_LOG \n",
                "echo 'Checking SELINUX status' >>$BUILD_LOG \n",
                "cat /etc/selinux/config >>$BUILD_LOG \n",
                "echo 'Configure SELinux' >>$BUILD_LOG \n",
                "# semanage fcontext -a -t httpd_sys_content_t \"/var/pyapps(/.*)?\" \n",
                "# semanage fcontext -a -t httpd_sys_content_t \"/var/virtualenv(/.*)?\" \n",
                "# restorecon -Rv /var \n",
                "export PY_SERVER=",
                {
                  "Ref": "LBServerName"
                },
                " \n",
                "export PY_APP_HOME=",
                {
                  "Ref": "PyAppHome"
                },
                " \n",
                "cd ",
                {
                  "Ref": "PyAppHome"
                },
                " \n",
                "chmod -R 0755 /var/pyapps \n",
                "cd ",
                {
                  "Ref": "PyAppHome"
                },
                "/hhs_oauth_server \n",
                "echo 'Configure application' >>$BUILD_LOG \n",
                "chmod +x ",
                {
                  "Ref": "PyAppHome"
                },
                "  \n",
                "export BALANCER_CONF=/etc/httpd/conf.d/balancer.conf \n",
                "echo 'copying LoadBalancer file $BALANCER_CONF into place' >>$BUILD_LOG \n",
                "echo '<VirtualHost *:80>' >>$BALANCER_CONF \n",
                "echo '    ProxyRequests off' >>$BALANCER_CONF \n",
                "echo '    ServerName ",
                {
                  "Ref": "LBServerName"
                },
                "' >>$BALANCER_CONF \n",
                "echo 'Header add Set-Cookie \"ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/\" env=BALANCER_ROUTE_CHANGED' >>$BALANCER_CONF \n",
                "echo '    <Proxy balancer://mycluster>' >>$BALANCER_CONF \n",
                "echo '        # WebHead1' >>$BALANCER_CONF \n",
                "echo '        BalancerMember \"http://",
                {
                  "Ref": "AppServerIP1"
                },
                ":80\" route=1' >>$BALANCER_CONF \n",
                "echo '        # WebHead2' >>$BALANCER_CONF \n",
                "echo '        BalancerMember \"http://",
                {
                  "Ref": "AppServerIP2"
                },
                ":80\" route=2' >>$BALANCER_CONF \n",
                "echo '        # Security - technically we aren't blocking' >>$BALANCER_CONF \n",
                "echo '        # anyone but this is the place to make those changes.' >>$BALANCER_CONF \n",
                "echo '        # Load Balancer Settings' >>$BALANCER_CONF \n",
                "echo '        # Setting a stickier balancer' >>$BALANCER_CONF \n",
                "echo '        ProxySet stickysession=ROUTEID' >>$BALANCER_CONF \n",
                "echo '    </Proxy>' >>$BALANCER_CONF \n",
                "echo '    # Point of Balance' >>$BALANCER_CONF \n",
                "echo '    # we will balance \"/\" or everything in the site.' >>$BALANCER_CONF \n",
                "echo '    ProxyPass /balancer-manager !' >>$BALANCER_CONF \n",
                "echo '    ProxyPass / balancer://mycluster/' >>$BALANCER_CONF \n",
                "echo '    ProxyPassReverse / balancer://mycluster' >>$BALANCER_CONF \n",
                "echo '</VirtualHost>' >>$BALANCER_CONF \n",
                "echo 'Tidying up...' >>$BUILD_LOG \n",
                "chmod -R 0755 /var/pyapps \n",
                "chmod -R 0755 /var/virtualenv \n",
                "chown -Rf pyapps:apache /var/pyapps \n",
                "chown -Rf pyapps:apache /var/virtualenv \n",
                "chown -Rf ec2-user:ec2-user /home/ec2-user \n",
                "echo 'Copy DJANGO_CUSTOM_SETTINGS_DIR to /etc/sysconfig/httpd' >>$BUILD_LOG \n",
                "echo export DJANGO_CUSTOM_SETTINGS_DIR=",
                {
                  "Ref": "PyAppHome"
                },
                "/ >>/etc/sysconfig/httpd \n",
                "echo 'Starting Apache...' >>$BUILD_LOG \n",
                "chkconfig httpd on \n",
                "service httpd stop \n",
                "service httpd start \n",
                "date -r /home/ec2-user/build_status.log >>$BUILD_LOG \n",
                "echo \"",
                {
                  "Ref": "TagKeyStack"
                },
                ":",
                {
                  "Ref": "LBServerName"
                },
                " Server installed \" >>$BUILD_LOG \n",
                "echo 'DONE.' >>$BUILD_LOG \n"
              ]
            ]
          }
        }
      }
    },
    "MyEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "InstanceId": {
          "Ref": "EcInstance"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e27d6d77-0199-4486-b2f9-b6a8c3ca874e"
        }
      }
    }
  },
  "Outputs": {
    "Ec2SecurityGrp": {
      "Value": {
        "Ref": "Ec2SecurityGrp"
      },
      "Description": "New Security Group for Instance"
    },
    "EcInstanceId": {
      "Value": {
        "Ref": "EcInstance"
      }
    },
    "EcPublicIp": {
      "Value": {
        "Fn::GetAtt": [
          "EcInstance",
          "PublicIp"
        ]
      }
    }
  }
}