{
  "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Full Deployment Script to choose environment, build LoadBalancer Server",
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "25af43bb-a438-4ab1-95f3-a75ccb55a8e0": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 400,
          "y": 150
        },
        "z": 0,
        "embeds": [],
        "ismemberof": [
          "c3783791-0069-4324-8453-123708403b5f"
        ]
      },
      "ccaf1f4f-226d-426c-98dd-2d40c521faac": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 407.1666666666667,
          "y": 54.666666666666664
        },
        "z": 0,
        "embeds": [],
        "ismemberof": [
          "c3783791-0069-4324-8453-123708403b5f"
        ]
      },
      "c3783791-0069-4324-8453-123708403b5f": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 310,
          "y": 30
        },
        "z": 0,
        "embeds": []
      },
      "edac4598-f770-4f35-afca-37b85d0499f3": {
        "source": {
          "id": "ccaf1f4f-226d-426c-98dd-2d40c521faac"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 1
      },
      "8af86a4e-f1e7-4e5d-92cb-0acef1900f7f": {
        "source": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 11
      },
      "45524452-309f-4038-bca6-5a7a5f01df22": {
        "source": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 1
      },
      "e82b4266-5a0d-480d-a8fb-1dc01afd5599": {
        "source": {
          "id": "ccaf1f4f-226d-426c-98dd-2d40c521faac"
        },
        "target": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "z": 2
      },
      "8c7ca01e-c682-4ff0-bdde-06b7e176e7c5": {
        "source": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        },
        "target": {
          "id": "65ce014a-b543-4f02-b13d-7065981f348d"
        },
        "z": 3
      }
    }
  },
  "Mappings": {
      "AWSInstanceType2Arch": {
          "t2.medium": {
              "Arch": "HVM"
          },
          "m1.medium": {
              "Arch": "PV"
          },
          "m1.large": {
              "Arch": "PV"
          },
          "m1.xlarge": {
              "Arch": "PV"
          },
          "m2.xlarge": {
              "Arch": "PV"
          },
          "m2.2xlarge": {
              "Arch": "PV"
          },
          "m2.4xlarge": {
              "Arch": "PV"
          },
          "m3.medium": {
              "Arch": "HVM"
          },
          "m3.large": {
              "Arch": "HVM"
          },
          "m3.xlarge": {
              "Arch": "HVM"
          },
          "m3.2xlarge": {
              "Arch": "HVM"
          },
          "c1.medium": {
              "Arch": "PV"
          },
          "c1.xlarge": {
              "Arch": "PV"
          },
          "c3.large": {
              "Arch": "HVM"
          },
          "c3.xlarge": {
              "Arch": "HVM"
          },
          "c3.2xlarge": {
              "Arch": "HVM"
          },
          "c3.4xlarge": {
              "Arch": "HVM"
          },
          "c3.8xlarge": {
              "Arch": "HVM"
          },
          "r3.large": {
              "Arch": "HVM"
          },
          "r3.xlarge": {
              "Arch": "HVM"
          },
          "r3.2xlarge": {
              "Arch": "HVM"
          },
          "r3.4xlarge": {
              "Arch": "HVM"
          },
          "r3.8xlarge": {
              "Arch": "HVM"
          },
          "i2.xlarge": {
              "Arch": "HVM"
          },
          "i2.2xlarge": {
              "Arch": "HVM"
          },
          "i2.4xlarge": {
              "Arch": "HVM"
          },
          "i2.8xlarge": {
              "Arch": "HVM"
          },
          "hi1.4xlarge": {
              "Arch": "HVM"
          },
          "hs1.8xlarge": {
              "Arch": "HVM"
          },
          "cr1.8xlarge": {
              "Arch": "HVM"
          },
          "cc2.8xlarge": {
              "Arch": "HVM"
          }
      },
      "AWSRegionArch2AMI": {
          "us-east-1": {
              "PV": "ami-d8c7aecf",
              "HVM": "ami-28c2ab3f"
          },
          "us-east-1a": {
              "PV": "ami-d8c7aecf",
              "HVM": "ami-28c2ab3f"
          },
          "us-east-1b": {
              "PV": "ami-d8c7aecf",
              "HVM": "ami-28c2ab3f"
          },
          "us-east-1c": {
              "PV": "ami-d8c7aecf",
              "HVM": "ami-28c2ab3f"
          }
      },
      "VPCEnvironment": {
          "us-east-1": {
              "dev": "vpc-80bdc3e7",
              "test": "vpc-5d5a163a",
              "impl": "vpc-5fd4de38",
              "prod": "vpc-9b3fc9fd"
          }
      },
      "EnvLayer": {
          "dev": {
              "az1": {
                  "dmz": "10.224.78.144/28",
                  "web": "10.224.78.0/28",
                  "app": "10.224.78.48/28",
                  "data": "10.224.78.96/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              },
              "az2": {
                  "dmz": "10.224.78.160/28",
                  "web": "10.224.78.16/28",
                  "app": "10.224.78.64/28",
                  "data": "10.224.78.112/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              },
              "az3": {
                  "dmz": "10.224.78.176/28",
                  "web": "10.224.78.32/28",
                  "app": "10.224.78.80/28",
                  "data": "10.224.78.128/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              }
          },
          "impl": {
              "az1": {
                  "dmz": "10.246.140.144/28",
                  "web": "10.246.140.0/28",
                  "app": "10.246.140.48/28",
                  "data": "10.246.140.96/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              },
              "az2": {
                  "dmz": "10.246.140.160/28",
                  "web": "10.246.140.16/28",
                  "app": "10.246.140.64/28",
                  "data": "10.246.140.112/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              },
              "az3": {
                  "dmz": "10.246.140.176/28",
                  "web": "10.246.140.32/28",
                  "app": "10.246.140.80/28",
                  "data": "10.246.140.128/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              }
          },
          "prod": {
              "az1": {
                  "dmz": "10.244.44.144/28",
                  "web": "10.244.44.0/28",
                  "app": "10.244.44.48/28",
                  "data": "10.244.44.96/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              },
              "az2": {
                  "dmz": "10.244.44.160/28",
                  "web": "10.244.44.16/28",
                  "app": "10.244.44.64/28",
                  "data": "10.244.44.112/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              },
              "az3": {
                  "dmz": "10.244.44.176/28",
                  "web": "10.244.44.32/28",
                  "app": "10.244.44.80/28",
                  "data": "10.244.44.128/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              }
          },
          "test": {
              "az1": {
                  "dmz": "10.224.90.144/28",
                  "web": "10.224.90.0/28",
                  "app": "10.224.90.48/28",
                  "data": "10.224.90.96/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              },
              "az2": {
                  "dmz": "10.224.90.160/28",
                  "web": "10.224.90.16/28",
                  "app": "10.224.90.64/28",
                  "data": "10.224.90.112/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              },
              "az3": {
                  "dmz": "10.224.90.176/28",
                  "web": "10.224.90.32/28",
                  "app": "10.224.90.80/28",
                  "data": "10.224.90.128/28",
                  "ocss1": "10.128.11.0/24",
                  "ocss2": "10.128.111.0/24"
              }
          }
      },
      "EnvSubNetIdAz": {
          "dev": {
              "az1": {
                  "dmz": "subnet-82ecfba8",
                  "web": "subnet-8decfba7",
                  "app": "subnet-80ecfbaa",
                  "data": "subnet-8cecfba6"
              },
              "az2": {
                  "dmz": "subnet-228e486b",
                  "web": "subnet-208e4869",
                  "app": "subnet-2f8e4866",
                  "data": "subnet-2e8e4867"
              },
              "az3": {
                  "dmz": "subnet-208e4869",
                  "web": "subnet-2f8e4866",
                  "app": "subnet-47bca81f",
                  "data": "subnet-7bbca823"
              }
          },
          "impl": {
              "az1": {
                  "dmz": "subnet-82ecfba8",
                  "web": "subnet-8decfba7",
                  "app": "subnet-80ecfbaa",
                  "data": "subnet-8cecfba6"
              },
              "az2": {
                  "dmz": "subnet-228e486b",
                  "web": "subnet-208e4869",
                  "app": "subnet-2f8e4866",
                  "data": "subnet-2e8e4867"
              },
              "az3": {
                  "dmz": "subnet-208e4869",
                  "web": "subnet-2f8e4866",
                  "app": "subnet-47bca81f",
                  "data": "subnet-7bbca823"
              }
          },
          "prod": {
              "az1": {
                  "dmz": "subnet-82ecfba8",
                  "web": "subnet-8decfba7",
                  "app": "subnet-80ecfbaa",
                  "data": "subnet-8cecfba6"
              },
              "az2": {
                  "dmz": "subnet-228e486b",
                  "web": "subnet-208e4869",
                  "app": "subnet-2f8e4866",
                  "data": "subnet-2e8e4867"
              },
              "az3": {
                  "dmz": "subnet-208e4869",
                  "web": "subnet-2f8e4866",
                  "app": "subnet-47bca81f",
                  "data": "subnet-7bbca823"
              }
          },
          "test": {
              "az1": {
                  "dmz": "subnet-82ecfba8",
                  "web": "subnet-8decfba7",
                  "app": "subnet-80ecfbaa",
                  "data": "subnet-8cecfba6"
              },
              "az2": {
                  "dmz": "subnet-228e486b",
                  "web": "subnet-208e4869",
                  "app": "subnet-2f8e4866",
                  "data": "subnet-2e8e4867"
              },
              "az3": {
                  "dmz": "subnet-208e4869",
                  "web": "subnet-2f8e4866",
                  "app": "subnet-47bca81f",
                  "data": "subnet-7bbca823"
              }
          }
      }
  },
  "Parameters": {
     "AZone": {
         "Type": "String",
         "Description": "Launch into Availability Zone",
         "Default": "az1"
     },
     "BuildImageId": {
        "Type": "String",
         "Description": "PV Image",
         "Default": "ami-d8c7aecf"
     },
     "InstanceName" : {
        "Description" : "Easily recognizable name in the EC2 Instance List",
        "Type" : "String",
        "Default" : "Change_this_name_to_Something_unique"
     },
     "TagKeyStack": {
         "Description": "Application Stack Identifier",
         "Type": "String",
         "Default": "dev",
         "AllowedValues": ["dev", "test", "impl", "prod", "sbx", "tools"]
     },
     "TagKeyLayer": {
          "Description": "Application Layer Identifier",
          "Type": "String",
          "Default": "app",
          "AllowedValues": ["dmz", "web", "app", "data", "nat", "jump", "tools"]
     },
     "KeyName": {
      "Description": "EC2 KeyPair for SSH access to instance",
      "Type": "String",
      "Default": "cms_bluebutton_fe_dev",
      "AllowedValues": [
        "cms_bluebutton_fe_dev"
      ]
    },
     "InstanceType": {
      "Description": "RHEL Linux EC2 instance type",
      "Type": "String",
      "Default": "m2.xlarge",
      "AllowedValues": [
        "t2.medium",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type"
    },
     "LBServerName" : {
      "Description": "Linux Server (DNS) Name (Make Unique) prefix environment unless production",
      "Type": "String",
      "Default": "bluebutton.cms.fhirservice.net"
    },
     "PyAppHome": {
       "Description": "Python App Home Base Path",
       "Type": "String",
       "Default": "/var/pyapps/hhs_o_server"
     },
     "LBMaster" : {
       "Description": "LB superuser",
       "Type": "String",
       "Default": "lbapps"
     },
     "pyappsemail" : {
       "Description": "LB apps superuser email",
       "Type": "String",
       "Default": "admin@api.bbonfhir.com"
     },
     "LBPassword" : {
       "Description": "LB superuser password",
       "Type": "String",
       "Default": "R3s3t_Th1s"
     },
     "AppServerIp01":{
       "Description": "Load Balancer pass through to App Server 1 by IP Address",
       "Type": "String",
       "Default": "10.224.78.52"
     },
     "AppServerIp02":{
       "Description": "Load Balancer pass through to App Server 2 by IP Address",
       "Type": "String",
       "Default": "10.224.78.59"
     },

     "TargetVpcId" : {
       "Type" : "AWS::EC2::VPC::Id",
       "Description" : "VpcId of your existing Virtual Private Cloud (VPC)"
     }
  },
  "Resources": {

    "EC2S3Role" : {
          "Type" : "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
			"Policies": [ {
             "PolicyName": "S3Policy",
             "PolicyDocument" : {
						"Statement": [
						{
							"Effect": "Allow",
							"Action": "s3:*",
							"Resource": "*"
						}
					]
				}
			} ]
		  }
		},
    "EC2S3RoleProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
           "Path": "/",
           "Roles": [
             {
               "Ref": "EC2S3Role"
             }
           ]
         }
    },
    "LbEc2SecurityGrp": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Load Balancer: Enable SSH and http/https access to Apache",
        "VpcId" : {"Ref" : "TargetVpcId"},
        "Tags": [
            {
                  "Key": "Name",
                  "Value": {
                      "Ref": "InstanceName"
                  }
              },
            {
                "Key": "Environment",
                "Value": {
                    "Ref": "TagKeyStack"
                }
            },
            {
                "Key": "Layer",
                "Value": {
                    "Ref": "TagKeyLayer"
                }
            }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "4118",
            "ToPort": "4120",
            "CidrIp": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvLayer",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                            {"Ref": "TagKeyStack"}, "ocss1"]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "4118",
            "ToPort": "4120",
            "CidrIp": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvLayer",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                            {"Ref": "TagKeyStack"}, "ocss2"]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5666",
            "ToPort": "5667",
            "CidrIp": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvLayer",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                            {"Ref": "TagKeyStack"}, "ocss1"]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5666",
            "ToPort": "5667",
            "CidrIp": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvLayer",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                            {"Ref": "TagKeyStack"}, "ocss2"]}
          }
        ],
        "SecurityGroupEgress": [
          {
              "IpProtocol": "tcp",
              "FromPort": "22",
              "ToPort": "22",
              "CidrIp": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvLayer",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                          {"Ref": "TagKeyStack"}, "app"]}
          },
          {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "0.0.0.0/0"
          },
          {
              "IpProtocol": "tcp",
              "FromPort": "443",
              "ToPort": "443",
              "CidrIp": "0.0.0.0/0"
          },
          {
              "IpProtocol": "tcp",
              "FromPort": "4118",
              "ToPort": "4120",
              "CidrIp": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvLayer",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                              {"Ref": "TagKeyStack"}, "ocss1"]}
          },
          {
              "IpProtocol": "tcp",
              "FromPort": "4118",
              "ToPort": "4120",
              "CidrIp": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvLayer",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                              {"Ref": "TagKeyStack"}, "ocss2"]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5666",
            "ToPort": "5667",
            "CidrIp": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvLayer",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                            {"Ref": "TagKeyStack"}, "ocss1"]}
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5666",
            "ToPort": "5667",
            "CidrIp": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvLayer",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                            {"Ref": "TagKeyStack"}, "ocss2"]}
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "c3783791-0069-4324-8453-123708403b5f"
        }
      }
    },
    "myENI" : {
         "Type" : "AWS::EC2::NetworkInterface",
         "Properties" : {
            "Tags": [{"Key":"Layer","Value":"DMZ"}],
            "Description": "A nice description.",
            "SourceDestCheck": "false",
            "SubnetId": {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvSubNetIdAz",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                {"Ref": "TagKeyStack"}, {"Ref": "TagKeyLayer"}]
            }

         }
    },
    "LbEcInstance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
       "AWS::CloudFormation::Designer": {
          "id": "25af43bb-a438-4ab1-95f3-a75ccb55a8e0"
        },
        "AWS::CloudFormation::Init": {
          "configSets": {
            "Install": [
              "Install"
            ]
          },
          "Install": {
            "packages": {
              "yum": {
                "gcc": [],
                "gcc-c++": [],
                "httpd": [],
                "httpd-devel": [],
                "zlib-devel": [],
                "bzip2-devel": [],
                "mod_wsgi": [],
                "openssl-devel": [],
                "ncurses-devel": [],
                "sqlite-devel": [],
                "readline-devel": [],
                "tk-devel": [],
                "gdbm-devel": [],
                "db4-devel": [],
                "libpcap-devel": [],
                "xz-devel": [],
                "git": [],
                "libxml2-devel": [],
                "libxslt-devel": []
              }
            },
            "groups": {
              "apache": {"gid": "48"}
            },
            "users" : {
              "pyapps": {
                "groups" : ["apache"],
                "uid" : "501",
                "homeDir" : "/home/pyapps"
              }
            }
          }
        }
      },
      "Properties": {
          "ImageId": {
              "Ref": "BuildImageId"
          },

          "IamInstanceProfile": {
              "Ref": "EC2S3RoleProfile"
          },
          "InstanceType": {
              "Ref": "InstanceType"
          },
          "KeyName": {
              "Ref": "KeyName"
          },
          "SecurityGroupIds" : [{"Ref": "LbEc2SecurityGrp"}],
          "SubnetId" : {"Fn::FindInMap": [ {"Fn::FindInMap": [ "EnvSubNetIdAz",
                            {"Ref": "TagKeyLayer"}, {"Ref": "AZone"}]},
                {"Ref": "TagKeyStack"}, {"Ref": "TagKeyLayer"}]
          },

          "Tags": [
              {
                  "Key": "Name",
                  "Value": {
                      "Ref": "InstanceName"
                  }
              },
              {
                  "Key": "business",
                  "Value": "oeda"
              },
              {
                  "Key": "application",
                  "Value": "bluebutton"
              },
              {
                  "Key": "stack",
                  "Value": {
                      "Ref": "TagKeyStack"
                  }
              },
              {
                  "Key": "layer",
                  "Value": {
                      "Ref": "TagKeyLayer"
                  }
              },
              {
                  "Key": "az",
                  "Value": {
                      "Ref": "AZone"
                  }
              }
          ],
          "Tenancy": "dedicated",
          "UserData": {
              "Fn::Base64": {
                  "Fn::Join": [
                      "",
                      [
                          "#!/bin/bash -ex",
                          "\n",
                          "export BUILD_LOG=/home/ec2-user/build_status.log \n",
                          "hostname ",
                          {
                              "Ref": "LBServerName"
                          },
                          " >$BUILD_LOG \n",
                          "echo 'Hostname configured: ",
                          {
                              "Ref": "LBServerName"
                          },
                          "' >>$BUILD_LOG \n",
                          "mkdir -p /home/ec2-user/script \n",
                          "chown -R ec2-user:root /home/ec2-user/script \n",

                          "# Configure AWS CLI Credentials \n",
                          "export AWS_DEFAULT_REGION=us-east-1 \n",
                          "echo 'Create user:",
                          {
                              "Ref": "LBMaster"
                          },
                          ".' >>$BUILD_LOG \n",
                          "pass=$(perl -e 'print crypt($ARGV[0], 'password')' $",
                          {
                              "Ref": "LBPassword"
                          },
                          ") \n",
                          "echo ",
                          {
                              "Ref": "LBMaster"
                          },
                          ":$pass \n",
                          "useradd -m -p $pass ",
                          {
                              "Ref": "LBMaster"
                          },
                          " \n",
                          "echo 'Add ",
                          {
                              "Ref": "LBMaster"
                          },
                          " to sudoers:' >>$BUILD_LOG \n",
                          "echo '",
                          {
                              "Ref": "LBMaster"
                          },
                          "       ALL=(ALL)       NOPASSWD: ALL' >/etc/sudoers.d/",
                          {
                              "Ref": "LBMaster"
                          },
                          ".conf \n",
                          "echo 'Installing Apache2' >>$BUILD_LOG \n",
                          "yum -y install httpd",
                          "\n",
                          "echo 'RHEL Version:' >>$BUILD_LOG \n",
                          "cat /etc/redhat-release >>$BUILD_LOG \n",
                          "echo 'package updates... ' >>$BUILD_LOG \n",
                          "yum-config-manager --enable rhel-server-rhscl-6-rpms \n",
                          "yum -y update >>$BUILD_LOG \n",
                          "echo 'Installing support dependencies' >>$BUILD_LOG \n",
                          "yum -y groupinstall 'Development Tools' \n",
                          "yum -y install gcc gcc-c++ httpd-devel zlib-devel bzip2-devel ",
                          " openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel",
                          " db4-devel libpcap-devel xz-devel python-devel postgresql-devel",
                          " libffi.x86_64 python-cffi \n",
                          "mkdir -p /home/ec2-user/download \n",
                          "cd /home/ec2-user/download \n",
                          "echo 'downloading and installing libffi-devel' >>$BUILD_LOG \n",
                          "wget http://mirror.centos.org/centos/6/os/x86_64/Packages/libffi-devel-3.0.5-3.2.el6.x86_64.rpm \n",
                          "yum -y install ./libffi-devel-3.0.5-3.2.el6.x86_64.rpm \n",
                          "echo 'Installing lxml+lxslt' >>$BUILD_LOG \n",
                          "yum -y install libxml2-devel libxslt-devel \n",

                          "echo '/usr/local/lib' >>/etc/ld.so.conf \n",

                          "cd /home/ec2-user/download \n",
                          "echo 'Installing git' >>$BUILD_LOG \n",
                          "yum -y install git \n",

                          "echo 'Setup for front-end app' >>$BUILD_LOG \n",

                          "echo 'Checking SELINUX status' >>$BUILD_LOG \n",
                          "cat /etc/selinux/config >>$BUILD_LOG \n",

                          "# echo 'Configure SELinux' >>$BUILD_LOG \n",
                          "# semanage fcontext -a -t httpd_sys_content_t \"/var/pyapps(/.*)?\" \n",
                          "# semanage fcontext -a -t httpd_sys_content_t \"/var/virtualenv(/.*)?\" \n",
                          "# restorecon -Rv /var \n",
                          "export PY_SERVER=",
                          {
                              "Ref": "LBServerName"
                          },
                          " \n",

                          "echo 'Configure Load Balancer' >>$BUILD_LOG \n",

                          "export BALANCER_CONF=/etc/httpd/conf.d/balancer.conf \n",
                          "echo 'copying LoadBalancer file $BALANCER_CONF into place' >>$BUILD_LOG \n",

                          "echo '<VirtualHost *:80>' >>$BALANCER_CONF \n",
                          "echo '    ProxyRequests off' >>$BALANCER_CONF \n",
                          "echo '    ServerName ",
                          {
                              "Ref": "LBServerName"
                          },
                          "' >>$BALANCER_CONF \n",
                          "echo 'Header add Set-Cookie \"ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/\" env=BALANCER_ROUTE_CHANGED' >>$BALANCER_CONF \n",
                          "echo '    <Proxy balancer://mycluster>' >>$BALANCER_CONF \n",
                          "echo '        # WebHead1' >>$BALANCER_CONF \n",
                          "echo '        BalancerMember \"http://",
                          {
                              "Ref": "AppServerIp01"
                          },
                          ":80\" route=1' >>$BALANCER_CONF \n",
                          "echo '        # WebHead2' >>$BALANCER_CONF \n",
                          "echo '        BalancerMember \"http://",
                          {
                              "Ref": "AppServerIp02"
                          },
                          ":80\" route=2' >>$BALANCER_CONF \n",
                          "echo '        # Security - technically we aren't blocking' >>$BALANCER_CONF \n",
                          "echo '        # anyone but this is the place to make those changes.' >>$BALANCER_CONF \n",
                          "echo '        # Load Balancer Settings' >>$BALANCER_CONF \n",
                          "echo '        # Setting a stickier balancer' >>$BALANCER_CONF \n",
                          "echo '        ProxySet stickysession=ROUTEID' >>$BALANCER_CONF \n",
                          "echo '    </Proxy>' >>$BALANCER_CONF \n",
                          "echo '    # Point of Balance' >>$BALANCER_CONF \n",
                          "echo '    # we will balance \"/\" or everything in the site.' >>$BALANCER_CONF \n",
                          "echo '    ProxyPass /balancer-manager !' >>$BALANCER_CONF \n",
                          "echo '    ProxyPass / balancer://mycluster/' >>$BALANCER_CONF \n",
                          "echo '    ProxyPassReverse / balancer://mycluster' >>$BALANCER_CONF \n",
                          "echo '</VirtualHost>' >>$BALANCER_CONF \n",

                          "echo 'Tidying up...' >>$BUILD_LOG \n",

                          "chown -Rf ec2-user:ec2-user /home/ec2-user \n",

                          "echo 'Starting Apache...' >>$BUILD_LOG \n",
                          "chkconfig httpd on \n",
                          "service httpd stop \n",
                          "service httpd start \n",
                          "date -r /home/ec2-user/build_status.log >>$BUILD_LOG \n",
                          "echo \"",
                          {
                              "Ref": "TagKeyStack"
                          },
                          ":",
                          {
                              "Ref": "LBServerName"
                          },
                          " Server installed \" >>$BUILD_LOG \n",
                          "echo 'DONE.' >>$BUILD_LOG \n"
                      ]
                  ]
              }
          }
      }
    },

    "MyLbEIP" : {
        "Type" : "AWS::EC2::EIP",
        "Properties" : {
            "InstanceId" : { "Ref" : "LbEcInstance" }
        }
    }
  },
  "Outputs": {
    "LbEc2SecurityGrpId": {
      "Value": {
        "Ref": "LbEc2SecurityGrp"
      },
      "Export": {
          "Name": {
              "Fn::Join": [":", [{"Ref": "TagKeyStack"},
                                {"Ref": "TagKeyLayer"},
                                 "LbEc2SecurityGrpId" ]  ]
          }
      },
      "Description": "New Security Group for Load Balancer Instance"
    },
    "LbEcInstanceId": {
      "Value": {
        "Ref": "LbEcInstance"
      },
      "Export": {
          "Name": {
              "Fn::Join": [":", [{"Ref": "TagKeyStack"},
                                {"Ref": "TagKeyLayer"},
                                 "LbEcInstanceId" ] ]
          }
      }
    },
    "LbEcPublicIp": {
      "Value": {
        "Fn::GetAtt" : [ "LbEcInstance", "PublicIp" ]
      },
      "Export": {
          "Name": {
              "Fn::Join": [":", [{"Ref": "TagKeyStack"},
                                {"Ref": "TagKeyLayer"},
                                "PublicIp" ] ]
          }
      }
    },
      "LbEcPrivateIp": {
      "Value": {
        "Fn::GetAtt" : [ "LbEcInstance", "PrivateIp" ]
      },
      "Export": {
          "Name": {
              "Fn::Join": [":", [{"Ref": "TagKeyStack"},
                                {"Ref": "TagKeyLayer"},
                                 "PrivateIp" ] ]
          }
      }
    }
  }

}


