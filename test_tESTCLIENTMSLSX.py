# Generated by Selenium IDE
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


class TestTESTCLIENTMSLSX():
    def setup_method(self, method):
        opt = webdriver.ChromeOptions()
        opt.add_argument("--headless")
        opt.add_argument("--disable-dev-shm-usage")
        opt.add_argument("--disable-web-security")
        opt.add_argument("--allow-running-insecure-content")
        opt.add_argument("--no-sandbox")
        opt.add_argument("--disable-setuid-sandbox")
        opt.add_argument("--disable-webgl")
        opt.add_argument("--disable-popup-blocking")
        opt.add_argument("--enable-javascript")
        opt.add_argument('--allow-insecure-localhost')
        self.driver = webdriver.Chrome(options=opt)

    def teardown_method(self, method):
        self.driver.close()

    def find_and_click(self, timeout_sec, by, by_expr):
        elem = WebDriverWait(self.driver, timeout_sec).until(EC.visibility_of_element_located((by, by_expr)))
        self.assertIsNotNone(elem)
        elem.click()
        return elem

    def test_tESTCLIENTMSLSX(self):
        self.driver.get("http://localhost:8000/")
        print("========================  BB2 LANDING ========================")
        self.driver.set_window_size(1478, 794)
        self.driver.find_element(By.LINK_TEXT, "Test Client").click()
        self.driver.find_element(By.LINK_TEXT, "Get a Sample Authorization Token for v2").click()
        self.driver.find_element(By.LINK_TEXT, "Authorize as a Beneficiary").click()
        print("=========================== USER NAME =====================")
        self.driver.set_window_size(1478, 794)
        print("=========================== take screenshot =====================")
        self.driver.get_screenshot_as_file("screenshot.png")
        elem = self.find_and_click(20, By.NAME, 'username')
        # type in sub name
        elem.send_keys("fred")
        self.driver.find_element(By.NAME, "username").click()
        self.driver.find_element(By.NAME, "username").send_keys("fred")
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(1)").click()
        self.driver.find_element(By.NAME, "hicn").click()
        print("====================== HICN ==========================")
        element = self.driver.find_element(By.NAME, "hicn")
        actions = ActionChains(self.driver)
        actions.double_click(element).perform()
        print("======================= MBI =========================")
        self.driver.find_element(By.CSS_SELECTOR, "body").click()
        self.driver.find_element(By.NAME, "mbi").click()
        self.driver.find_element(By.NAME, "mbi").send_keys("2SW4N00AA00")
        self.driver.find_element(By.NAME, "hicn").click()
        self.driver.find_element(By.NAME, "hicn").send_keys("1000044680")
        self.driver.find_element(By.CSS_SELECTOR, "button").click()
        self.driver.find_element(By.ID, "approve").click()
        print("========================== SUBMIT ======================")
        self.driver.find_element(By.LINK_TEXT, "Patient").click()
        self.driver.find_element(By.LINK_TEXT, "Test Client").click()
        print("================== BACK TO TESTCLIENT HOME ==============================")
        self.driver.close()
