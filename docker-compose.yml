services:
  msls:
    build: ./dev-local
    command: python app.py
    ports:
      - "8080:8080"
    volumes:
      - ./dev-local:/code
    profiles:
      - mocksls
  db:
    image: postgres
    env_file:
      - docker-compose/db-env-vars.env
    ports:
      - "5432:5432"
  web:
    build: .
    command: ./docker-compose/bluebutton_server_start.sh
    env_file:
      - docker-compose/web-env-vars.env
      - docker-compose/slsx-env-vars.env
      # local devel specific variables go here!
      - .env
    volumes:
      - .:/code
    ports:
      - "8000:8000"
      - "5678:5678"
    depends_on:
      - db
    profiles:
      - slsx
    platform: linux/amd64
  web_msls:
    build: .
    command: ./docker-compose/bluebutton_server_start.sh
    env_file:
      - docker-compose/web-env-vars.env
      - docker-compose/msls-env-vars.env
      # local devel specific variables go here!
      - .env
    volumes:
      - .:/code
    ports:
      - "8000:8000"
      - "5678:5678"
    depends_on:
      - db
      - msls
    profiles:
      - mocksls
    platform: linux/amd64
  sonarqube:
    image: sonarqube:community
    environment:
      - SONAR_WEB_PORT=9009
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9009:9009"
    profiles:
      - sonarserver
  unittests:
    build: .
    command: python3 -m debugpy --listen 0.0.0.0:6789 --wait-for-client runtests.py
    env_file:
      - docker-compose/unittests-env-vars.env
    ports:
      - "6789:6789"
    volumes:
      - .:/code
    profiles:
      - tests
  coverage:
    build: .
    command: bash -c "coverage run runtests.py && coverage xml"
    env_file:
      - docker-compose/unittests-env-vars.env
    volumes:
      - .:/code
    profiles:
      - coverage
  sonardemo:
    build: .
    command: bash -c "sonar-scanner -Dsonar.projectKey=BB2 -Dsonar.sources=. -Dsonar.python.coverage.reportPaths=coverage.xml -Dsonar.host.url=http://sonarqube:9009 -Dsonar.token=sqp_9f1dcd7f83b3b12be28008a6e0a595352a852bec"
    volumes:
      - .:/code
    profiles:
      - sonardemo
volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

